-- PCL metrics engine database structure
-- Compatible with mysql 5.0+
-- AfterLifeLochie, 2014

DROP TABLE IF EXISTS METRICS;
DROP TABLE IF EXISTS SESSIONS;
DROP TABLE IF EXISTS USERS;
DROP TABLE IF EXISTS PRODUCTVIEWS;
DROP TABLE IF EXISTS VIEWELEMENTS;
DROP TABLE IF EXISTS ELEMENTS;
DROP TABLE IF EXISTS COMPONENTS;
DROP TABLE IF EXISTS PRODUCTVERSION;
DROP TABLE IF EXISTS PRODUCTS;
DROP TABLE IF EXISTS VIEWS;
DROP TABLE IF EXISTS CLOAKS;

-- CREATE USERS
CREATE TABLE USERS (
	USER_ID				INTEGER			NOT NULL 	AUTO_INCREMENT,
	USER_NAME			VARCHAR(255)	NOT NULL,
	USER_HASH			VARCHAR(255)	NOT NULL,
	USER_RIGHTS			INTEGER			NOT NULL,
	USER_CAN_LOGIN		ENUM('YES', 'NO') NOT NULL,
	USER_CAN_ROOT		ENUM('YES', 'NO') NOT NULL,
	PRIMARY KEY(USER_ID)
);

-- CREATE SESSIONS
CREATE TABLE SESSIONS (
	SESSION_TAG			VARCHAR(255)	NOT NULL,
	SESSION_USERID		INTEGER			NOT NULL,
	SESSION_IPADDR_H	BIGINT			NOT NULL,   -- HIWORD(V6) / VOID
	SESSION_IPADDR_L	BIGINT			NOT NULL,	-- LOWORD(V6) / V4
	SESSION_AGENT		VARCHAR(512)	NOT NULL,
	SESSION_EXPIRY		INTEGER			NOT NULL,
	PRIMARY KEY (SESSION_TAG), 
	FOREIGN KEY (SESSION_USERID) REFERENCES USERS(USER_ID)
);

-- CREATE COMPONENTS
CREATE TABLE COMPONENTS (
	COMPONENT_ID		INTEGER			NOT NULL 	AUTO_INCREMENT,
	COMPONENT_NAME		VARCHAR(255)	NOT NULL,
	COMPONENT_CLASS		VARCHAR(255)	NOT NULL,
	COMPONENT_ARGS		TEXT			NOT NULL,
	PRIMARY KEY (COMPONENT_ID)
);

-- CREATE VIEWS
CREATE TABLE VIEWS (
	VIEW_ID					INTEGER			NOT NULL	AUTO_INCREMENT,
	VIEW_NAME				VARCHAR(255)	NOT NULL,
	VIEW_ON_NAVIGATION		INTEGER(1)		NOT NULL,
	VIEW_RIGHTS_REQUIRED	INTEGER			NOT NULL,
	PRIMARY KEY (VIEW_ID)
);

-- CREATE VIEW ELEMENTS
CREATE TABLE VIEWELEMENTS (
	VIEW_ID			INTEGER		NOT NULL,
	COMPONENT_ID	INTEGER 	NOT NULL,
	PRIMARY KEY (VIEW_ID, COMPONENT_ID),
	FOREIGN KEY (VIEW_ID) 		REFERENCES VIEWS(VIEW_ID),
	FOREIGN KEY (COMPONENT_ID) 	REFERENCES COMPONENTS(COMPONENT_ID)
);

-- CREATE PRODUCTS
CREATE TABLE PRODUCTS (
	PRODUCT_ID				INTEGER			NOT NULL AUTO_INCREMENT,
	PRODUCT_NAME			VARCHAR(255)	NOT NULL,
	PRODUCT_HOME			VARCHAR(255)	NOT NULL,
	PRODUCT_DEFAULT_VIEW	INTEGER			NOT NULL,
	PRIMARY KEY (PRODUCT_ID),
	FOREIGN KEY (PRODUCT_DEFAULT_VIEW) REFERENCES VIEWS(VIEW_ID)
);

-- CREATE PRODUCT VIEWS
CREATE TABLE PRODUCTVIEWS (
	PRODUCT_ID	INTEGER		NOT NULL,
	VIEW_ID		INTEGER		NOT NULL,
	PRIMARY KEY (PRODUCT_ID, VIEW_ID),
	FOREIGN KEY (PRODUCT_ID) 	REFERENCES PRODUCTS(PRODUCT_ID),
	FOREIGN KEY (VIEW_ID) 		REFERENCES VIEWS(VIEW_ID)
);

-- CREATE PRODUCT VERSIONS
CREATE TABLE PRODUCTVERSION (
	VERSION_ID			INTEGER		NOT NULL 	AUTO_INCREMENT,
	PRODUCT_ID			INTEGER		NOT NULL,
	VERSION_BUILD_NO	INTEGER		NOT NULL,
	VERSION_METADATA	TEXT,
	PRIMARY KEY (VERSION_ID),
	FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(PRODUCT_ID)
);

-- CREATE METRICS STORE; I've ignored creating explicit foreign key
-- links in the event the database cannot satisfy the request (eg,
-- nobody added a version) or in case this table gets so large it
-- takes a long-ass time to index. Instead, we assume all data that
-- comes in is filtered (which it will be), and then we'll ignore
-- rows which contain shit data. Avast!
CREATE TABLE METRICS (
	METRICS_ID				INTEGER		NOT NULL 	AUTO_INCREMENT,
	METRICS_TIMESTAMP		INTEGER		NOT NULL,
	METRICS_PRODUCT_ID		INTEGER		NOT NULL,
	METRICS_PRODUCT_BUILD	INTEGER		NOT NULL,
	METRICS_FORGE_BUILD		INTEGER		NOT NULL,
	METRICS_GAME_SIDE		ENUM ('CLIENT', 'SERVER', 'OTHER') NOT NULL,
	METRICS_REQHASH			VARCHAR(16)	NOT NULL,
	PRIMARY KEY (METRICS_ID)
);

-- CREATE CLOAKS
CREATE TABLE CLOAKS (
	CAPE_USERNAME			VARCHAR(128) NOT NULL,
	CAPE_URL				VARCHAR(512) NOT NULL,
	CAPE_REASON				VARCHAR(512) NOT NULL,
	PRIMARY KEY (CAPE_USERNAME)
);

-- CREATE SESSION-USER VIEW; do not allow the selection of
-- fields which are protected.
CREATE OR REPLACE DEFINER = CURRENT_USER SQL SECURITY INVOKER
	VIEW USER_SESSIONS AS
		SELECT USER_ID, USER_NAME, USER_RIGHTS, SESSION_TAG, 
			SESSION_IPADDR_H, SESSION_IPADDR_L, SESSION_AGENT, 
			SESSION_EXPIRY 
		FROM SESSIONS 
		LEFT OUTER JOIN USERS 
			ON SESSIONS.SESSION_USERID = USERS.USER_ID;

-- CREATE VIEW-COMPONENTS VIEW; select all of view elements,
-- then include all components and then glue any assigned
-- views too.
CREATE OR REPLACE DEFINER = CURRENT_USER SQL SECURITY INVOKER
	VIEW VIEW_COMPONENTS AS
		SELECT VIEWS.VIEW_ID, VIEW_NAME, VIEW_ON_NAVIGATION, VIEW_RIGHTS_REQUIRED,
			COMPONENTS.COMPONENT_ID, COMPONENT_NAME, COMPONENT_CLASS, COMPONENT_ARGS
		FROM VIEWELEMENTS
		RIGHT OUTER JOIN COMPONENTS ON VIEWELEMENTS.COMPONENT_ID = COMPONENTS.COMPONENT_ID
		LEFT OUTER JOIN VIEWS ON VIEWELEMENTS.VIEW_ID = VIEWS.VIEW_ID;

-- POPULATE USERS TABLE
INSERT INTO USERS (USER_ID, USER_NAME, USER_HASH, USER_RIGHTS, 
		USER_CAN_LOGIN, USER_CAN_ROOT) VALUES
	(1, 'SYSTEM', '', 0, 'NO', 'YES'),
	(2, 'AfterLifeLochie', '', 0, 'NO', 'NO');

-- POPULATE SESSIONS TABLE
INSERT INTO SESSIONS (SESSION_TAG, SESSION_USERID, SESSION_IPADDR_H, SESSION_IPADDR_L,
		SESSION_AGENT, SESSION_EXPIRY) VALUES
	('DEADBEEF', 2, -1, -1, 'TestAgent', 0);

-- CREATE DEFAULT PROJECT VIEW
INSERT INTO COMPONENTS (COMPONENT_ID, COMPONENT_NAME, COMPONENT_CLASS, COMPONENT_ARGS)	
	VALUES (1, 'ProjectOverview', 'PreparedView\\ProjectOverview', '');
INSERT INTO VIEWS (VIEW_ID, VIEW_NAME, VIEW_ON_NAVIGATION, VIEW_RIGHTS_REQUIRED)
	VALUES (1, 'ProjectOverviewScreen', 1, 0);
INSERT INTO VIEWELEMENTS (VIEW_ID, COMPONENT_ID) VALUES (1, 1);
	
-- POPULATE PRODUCTS TABLE
INSERT INTO PRODUCTS (PRODUCT_ID, PRODUCT_NAME, PRODUCT_HOME, PRODUCT_DEFAULT_VIEW) VALUES
	(1, 'LanteaCraft', 'http://lanteacraft.com', 1),
	(2, 'OpenPrinter', 'https://github.com/PC-Logix/OpenPrinter', 1),
	(3, 'OpenSecurity', 'https://github.com/PC-Logix/OpenSecurity', 1);

-- POPULATE CLOAKS TABLE
INSERT INTO CLOAKS (CAPE_USERNAME, CAPE_URL, CAPE_REASON) VALUES
	('AfterLifeLochie', 'http://lanteacraft.com/api/cloaks/developer.png', 'developer'),
	('NeoRavencroft', 'http://lanteacraft.com/api/cloaks/developer.png', 'developer'),
	('MichiRavencroft', 'http://lanteacraft.com/api/cloaks/developer.png', 'developer'),
	('DrakeBD', 'http://lanteacraft.com/api/cloaks/developer.png', 'developer'),
	('CronosusCZ', 'http://lanteacraft.com/api/cloaks/contributor.png', 'cs_CZ editor'),
	('iTimmyLP', 'http://lanteacraft.com/api/cloaks/contributor.png', 'de_DE editor'),
	('iLucyLP', 'http://lanteacraft.com/api/cloaks/contributor.png', 'de_DE editor'),
	('hunator', 'http://lanteacraft.com/api/cloaks/contributor.png', 'cs_CZ editor'),
	('crafteverywhere', 'http://lanteacraft.com/api/cloaks/contributor.png', 'zh_CN editor'),
	('madshammy', 'http://lanteacraft.com/api/cloaks/donator.png', 'donator'),
	('Minerva_Long', 'http://lanteacraft.com/api/cloaks/donator.png', 'donator');